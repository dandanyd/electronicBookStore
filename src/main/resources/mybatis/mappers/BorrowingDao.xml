<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yindan.bookstore.dao.BorrowingDao">
  <resultMap id="BaseResultMap" type="com.yindan.bookstore.entity.BorrowingEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="book_id" jdbcType="BIGINT" property="bookId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="borrow_date" jdbcType="DATE" property="borrowDate" />
    <result column="due_date" jdbcType="DATE" property="dueDate" />
    <result column="return_date" jdbcType="DATE" property="returnDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="numbers" jdbcType="INTEGER" property="numbers" />
    <result column="damage_level" jdbcType="INTEGER" property="damageLevel" />
  </resultMap>
  <sql id="Base_Column_List">
    id, book_id, user_id, borrow_date, due_date, return_date, status, created_at, updated_at, numbers, damage_level
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from borrowing
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from borrowing
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yindan.bookstore.entity.BorrowingEntity">
    insert into borrowing (id, book_id, user_id,
      borrow_date, due_date, return_date, 
      status, created_at, updated_at,numbers,damage_level
      )
    values (#{id,jdbcType=BIGINT},#{bookId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
      #{borrowDate,jdbcType=DATE}, #{dueDate,jdbcType=DATE}, #{returnDate,jdbcType=DATE}, 
      #{status,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP},
      #{numbers,jdbcType=INTEGER}, #{damageLevel,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yindan.bookstore.entity.BorrowingEntity">
    update borrowing
    <set>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="borrowDate != null">
        borrow_date = #{borrowDate,jdbcType=DATE},
      </if>
      <if test="dueDate != null">
        due_date = #{dueDate,jdbcType=DATE},
      </if>
        return_date = #{returnDate,jdbcType=DATE},
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="numbers != null">
        numbers = #{numbers,jdbcType=INTEGER},
      </if>
      <if test="damageLevel != null">
        damage_level = #{damageLevel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="counts" resultType="int">
    select
     count(0)
    from borrowing
  </select>

  <select id="selectByBookIdAndUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from borrowing
    where book_id = #{bookId,jdbcType=BIGINT}
    and user_id = #{userId,jdbcType=BIGINT}
  </select>

  <select id="selUserBorrowing" resultType="int">
    select count(0) from borrowing t
    where t.book_id = #{bookId,jdbcType=BIGINT}
    and t.user_id = #{userId,jdbcType=BIGINT}
    and t.status = #{status,jdbcType=VARCHAR}
  </select>

  <select id="selBorrowingBooks" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from borrowing
    where book_id = #{bookId,jdbcType=BIGINT}
    and status = #{status,jdbcType=VARCHAR}
    order by numbers desc
  </select>


</mapper>