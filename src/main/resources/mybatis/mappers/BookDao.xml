<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yindan.bookstore.dao.BookDao">
  <resultMap id="BaseResultMap" type="com.yindan.bookstore.entity.BookEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="isbn" jdbcType="VARCHAR" property="isbn" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="cover_image" jdbcType="VARCHAR" property="coverImage" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <resultMap id="DtoResultMap" type="com.yindan.bookstore.dto.BookDto">
    <result column="stock_borrowing" jdbcType="INTEGER" property="stockBorrowing" />
    <result column="stock_sum" jdbcType="INTEGER" property="stockSum" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, author, isbn, category, price, stock, cover_image, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByIsbn" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from book
    where isbn = #{isbn,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from book
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yindan.bookstore.entity.BookEntity">
    insert into book (id, title, author, 
      isbn, category, price, 
      stock, cover_image, created_at, 
      updated_at)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{isbn,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{stock,jdbcType=INTEGER}, #{coverImage,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yindan.bookstore.entity.BookEntity">
    update book
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        isbn = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="coverImage != null">
        cover_image = #{coverImage,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectAllBooks" resultMap="DtoResultMap">
        SELECT
        t1.id,
        t1.title,
        t1.author,
        t1.isbn,
        t1.category,
        t1.price,
        t1.cover_image coverImage,
		t1.stock ,
		( SELECT count( 1 ) FROM borrowing t WHERE t.book_id = t1.id and t.status != '已售出') stock_borrowing,
        t1.stock + ( SELECT count( 1 ) FROM borrowing t WHERE t.book_id = t1.id and t.status != '已售出') stock_sum
    FROM
        book t1
  </select>

  <select id="selectByCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from book
    <where>
      <if test="title != null and title.trim() != ''">
         and title like concat('%',#{title,jdbcType=VARCHAR},'%')
      </if>
      <if test="author != null and author.trim() != ''">
         and author like concat('%',#{author,jdbcType=VARCHAR},'%')
      </if>
      <if test="category != null and category.trim() != ''">
         and category = #{category,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
</mapper>